package net.ccbluex.liquidbounce.features.module.modules.exploit;

import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.api.minecraft.client.entity.IEntityPlayerSP;
import net.ccbluex.liquidbounce.api.minecraft.client.network.IINetHandlerPlayClient;
import net.ccbluex.liquidbounce.api.minecraft.network.IPacket;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.value.FloatValue;
import net.ccbluex.liquidbounce.value.ListValue;

@ModuleInfo(
    name = "Clip",
    description = "Allows you to clip through blocks.",
    category = ModuleCategory.EXPLOIT,
    canEnable = false
)
@Metadata(
    mv = { 1, 1, 16},
    bv = { 1, 0, 3},
    k = 1,
    d1 = { "\u0000 \n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\b\u0007\u0018\u00002\u00020\u0001B\u0005¢\u0006\u0002\u0010\u0002J\b\u0010\b\u001a\u00020\tH\u0016R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004¢\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004¢\u0006\u0002\n\u0000R\u000e\u0010\u0007\u001a\u00020\u0004X\u0082\u0004¢\u0006\u0002\n\u0000¨\u0006\n"},
    d2 = { "Lnet/ccbluex/liquidbounce/features/module/modules/exploit/Clip;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "horizontalValue", "Lnet/ccbluex/liquidbounce/value/FloatValue;", "modeValue", "Lnet/ccbluex/liquidbounce/value/ListValue;", "verticalValue", "onEnable", "", "LiquidBounce"}
)
public final class Clip extends Module {

    private final ListValue modeValue = new ListValue("Mode", new String[] { "Teleport", "Flag"}, "Teleport");
    private final FloatValue horizontalValue = new FloatValue("Horizontal", 0.0F, -10.0F, 10.0F);
    private final FloatValue verticalValue = new FloatValue("Vertical", 5.0F, -10.0F, 10.0F);

    public void onEnable() {
        IEntityPlayerSP ientityplayersp = MinecraftInstance.mc.getThePlayer();

        if (ientityplayersp != null) {
            IEntityPlayerSP thePlayer = ientityplayersp;
            double yaw = Math.toRadians((double) thePlayer.getRotationYaw());
            boolean z = false;
            double x = -Math.sin(yaw) * ((Number) this.horizontalValue.get()).doubleValue();
            boolean flag = false;
            double z1 = Math.cos(yaw) * ((Number) this.horizontalValue.get()).doubleValue();
            String s = (String) this.modeValue.get();
            boolean netHandler = false;

            if (s == null) {
                throw new TypeCastException("null cannot be cast to non-null type java.lang.String");
            } else {
                String s1 = s.toLowerCase();

                Intrinsics.checkExpressionValueIsNotNull(s1, "(this as java.lang.String).toLowerCase()");
                s = s1;
                switch (s.hashCode()) {
                case -1360201941:
                    if (s.equals("teleport")) {
                        thePlayer.setPosition(thePlayer.getPosX() + x, thePlayer.getPosY() + ((Number) this.verticalValue.get()).doubleValue(), thePlayer.getPosZ() + z1);
                    }
                    break;

                case 3145580:
                    if (s.equals("flag")) {
                        IINetHandlerPlayClient netHandler1 = MinecraftInstance.mc.getNetHandler();

                        netHandler1.addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX(), thePlayer.getPosY(), thePlayer.getPosZ(), true));
                        netHandler1.addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(0.5D, 0.0D, 0.5D, true));
                        netHandler1.addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX(), thePlayer.getPosY(), thePlayer.getPosZ(), true));
                        netHandler1.addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX() + x, thePlayer.getPosY() + ((Number) this.verticalValue.get()).doubleValue(), thePlayer.getPosZ() + z1, true));
                        netHandler1.addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(0.5D, 0.0D, 0.5D, true));
                        netHandler1.addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(thePlayer.getPosX() + 0.5D, thePlayer.getPosY(), thePlayer.getPosZ() + 0.5D, true));
                        double d0 = thePlayer.getPosX();
                        boolean flag1 = false;
                        double d1 = Math.sin(yaw);
                        double d2 = d0 + -d1 * 0.04D;
                        double d3 = thePlayer.getPosY();
                        double d4 = thePlayer.getPosZ();

                        d1 = d3;
                        d0 = d2;
                        flag1 = false;
                        double d5 = Math.cos(yaw);

                        thePlayer.setPosition(d0, d1, d4 + d5 * 0.04D);
                    }
                }

            }
        }
    }
}
