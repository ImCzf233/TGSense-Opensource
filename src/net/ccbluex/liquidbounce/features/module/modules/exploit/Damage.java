package net.ccbluex.liquidbounce.features.module.modules.exploit;

import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.api.minecraft.client.entity.IEntityPlayerSP;
import net.ccbluex.liquidbounce.api.minecraft.network.IPacket;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.value.IntegerValue;
import net.ccbluex.liquidbounce.value.ListValue;

@ModuleInfo(
    name = "Damage",
    description = "Deals damage to yourself.",
    category = ModuleCategory.EXPLOIT,
    canEnable = false
)
@Metadata(
    mv = { 1, 1, 16},
    bv = { 1, 0, 3},
    k = 1,
    d1 = { "\u0000\u001e\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\b\u0007\u0018\u00002\u00020\u0001B\u0005¢\u0006\u0002\u0010\u0002J\b\u0010\u0007\u001a\u00020\bH\u0016R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004¢\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082\u0004¢\u0006\u0002\n\u0000¨\u0006\t"},
    d2 = { "Lnet/ccbluex/liquidbounce/features/module/modules/exploit/Damage;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "damageValue", "Lnet/ccbluex/liquidbounce/value/IntegerValue;", "modeValue", "Lnet/ccbluex/liquidbounce/value/ListValue;", "onEnable", "", "LiquidBounce"}
)
public final class Damage extends Module {

    private final ListValue modeValue = new ListValue("Mode", new String[] { "NCP", "AAC"}, "NCP");
    private final IntegerValue damageValue = new IntegerValue("Damage", 1, 1, 20);

    public void onEnable() {
        IEntityPlayerSP ientityplayersp = MinecraftInstance.mc.getThePlayer();

        if (ientityplayersp != null) {
            IEntityPlayerSP thePlayer = ientityplayersp;
            String s = (String) this.modeValue.get();
            boolean x = false;

            if (s == null) {
                throw new TypeCastException("null cannot be cast to non-null type java.lang.String");
            } else {
                String s1 = s.toLowerCase();

                Intrinsics.checkExpressionValueIsNotNull(s1, "(this as java.lang.String).toLowerCase()");
                s = s1;
                switch (s.hashCode()) {
                case 96323:
                    if (s.equals("aac")) {
                        thePlayer.setMotionY((double) 5 * (double) ((Number) this.damageValue.get()).intValue());
                    }
                    break;

                case 108891:
                    if (s.equals("ncp")) {
                        double d0 = thePlayer.getPosX();
                        double y = thePlayer.getPosY();
                        double z = thePlayer.getPosZ();
                        int i = 65 * ((Number) this.damageValue.get()).intValue();
                        boolean flag = false;
                        boolean flag1 = false;
                        int j = 0;

                        for (int k = i; j < k; ++j) {
                            boolean $i$a$-repeat-Damage$onEnable$1 = false;

                            MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(d0, y + 0.049D, z, false));
                            MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(d0, y, z, false));
                        }

                        MinecraftInstance.mc.getNetHandler().addToSendQueue((IPacket) MinecraftInstance.classProvider.createCPacketPlayerPosition(d0, y, z, true));
                    }
                }

            }
        }
    }
}
