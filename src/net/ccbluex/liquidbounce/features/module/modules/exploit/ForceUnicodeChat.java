package net.ccbluex.liquidbounce.features.module.modules.exploit;

import kotlin.Metadata;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.api.minecraft.network.play.client.ICPacketChatMessage;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import org.jetbrains.annotations.NotNull;

@ModuleInfo(
    name = "ForceUnicodeChat",
    description = "Allows you to send unicode messages in chat.",
    category = ModuleCategory.EXPLOIT
)
@Metadata(
    mv = { 1, 1, 16},
    bv = { 1, 0, 3},
    k = 1,
    d1 = { "\u0000\u0018\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\b\u0007\u0018\u00002\u00020\u0001B\u0005Â¢\u0006\u0002\u0010\u0002J\u0010\u0010\u0003\u001a\u00020\u00042\u0006\u0010\u0005\u001a\u00020\u0006H\u0007Â¨\u0006\u0007"},
    d2 = { "Lnet/ccbluex/liquidbounce/features/module/modules/exploit/ForceUnicodeChat;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "onPacket", "", "event", "Lnet/ccbluex/liquidbounce/event/PacketEvent;", "LiquidBounce"}
)
public final class ForceUnicodeChat extends Module {

    @EventTarget
    public final void onPacket(@NotNull PacketEvent event) {
        Intrinsics.checkParameterIsNotNull(event, "event");
        if (MinecraftInstance.classProvider.isCPacketChatMessage(event.getPacket())) {
            ICPacketChatMessage chatMessage = event.getPacket().asCPacketChatMessage();
            String message = chatMessage.getMessage();
            StringBuilder stringBuilder = new StringBuilder();
            boolean flag = false;

            if (message == null) {
                throw new TypeCastException("null cannot be cast to non-null type java.lang.String");
            }

            char[] achar = message.toCharArray();

            Intrinsics.checkExpressionValueIsNotNull(achar, "(this as java.lang.String).toCharArray()");
            char[] achar1 = achar;
            int i = achar1.length;

            for (int j = 0; j < i; ++j) {
                char c = achar1[j];

                if (33 <= c) {
                    if (128 >= c) {
                        stringBuilder.append(Character.toChars(c + 'ï»?'));
                        continue;
                    }
                }

                stringBuilder.append(c);
            }

            String s = stringBuilder.toString();

            Intrinsics.checkExpressionValueIsNotNull(s, "stringBuilder.toString()");
            chatMessage.setMessage(s);
        }

    }
}
